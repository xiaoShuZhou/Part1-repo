{"ast":null,"code":"var _jsxFileName = \"/Users/sean/Desktop/programming/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n_c = Button;\nconst StatisticLine = _ref2 => {\n  let {\n    text,\n    value\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StatisticLine;\nconst Statistics = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref3;\n  const all = good + neutral + bad;\n  const average = (good - bad) / all;\n  const positive = good / all * 100;\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"good\",\n          value: good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"neutral\",\n          value: neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"bad\",\n          value: bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"all\",\n          value: all\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"average\",\n          value: average\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"positive\",\n          value: positive + ' %'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","handleClick","text","StatisticLine","value","Statistics","good","neutral","bad","all","average","positive","App","setGood","setNeutral","setBad"],"sources":["/Users/sean/Desktop/programming/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst StatisticLine = ({ text, value }) => {\n  return (\n    <tr>\n      <td>{text}</td>\n      <td>{value}</td>\n    </tr>\n  )\n}\n\nconst Statistics = ({ good, neutral, bad }) => {\n  const all = good + neutral + bad\n  const average = (good - bad) / all\n  const positive = good / all * 100\n\n  if (all === 0) {\n    return (\n      <div>\n        <h1>statistics</h1>\n        <p>No feedback given</p>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>statistics</h1>\n      <table>\n        <tbody>\n          <StatisticLine text=\"good\" value={good} />\n          <StatisticLine text=\"neutral\" value={neutral} />\n          <StatisticLine text=\"bad\" value={bad} />\n          <StatisticLine text=\"all\" value={all} />\n          <StatisticLine text=\"average\" value={average} />\n          <StatisticLine text=\"positive\" value={positive + ' %'} />\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={() => setGood(good + 1)} text=\"good\" />\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"neutral\" />\n      <Button handleClick={() => setBad(bad + 1)} text=\"bad\" />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}